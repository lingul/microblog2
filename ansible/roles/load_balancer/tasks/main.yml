---
- name: Install packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present

- name: Check if certificates exists
  ansible.builtin.stat:
    path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
  register: letsencrypt_cert

- ansible.builtin.debug: msg="{{ letsencrypt_cert.stat.exists }}"

- name: Stop nginx
  ansible.builtin.service:
    name: nginx
    state: stopped
  when: not letsencrypt_cert.stat.exists

- name: Generate certificate for https
  ansible.builtin.shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ email }} -d {{ domain_name }} -d www.{{ domain_name }}"
  when: not letsencrypt_cert.stat.exists

- name: Start nginx
  ansible.builtin.service:
    name: nginx
    state: started
  when: not letsencrypt_cert.stat.exists

- name: Remove default config file from sites-enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name:  Copy nginx.conf
  ansible.builtin.copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  notify:
    - Restart nginx

- name: Copy load-balancer.conf
  ansible.builtin.template:
    src: load-balancer.conf.j2
    dest: /etc/nginx/sites-available/load-balancer.conf
  notify:
    - Restart nginx

- name: Create symbolic link to enabled folder
  ansible.builtin.file:
    src: /etc/nginx/sites-available/load-balancer.conf
    path: /etc/nginx/sites-enabled/load-balancer.conf
    state: link